>> uiopen('d:\temp\zvuk1.wav',1)

>> sound(data, 22050);

>> revsound=flipud(data);
>> sound(revsound, 22050);
---------------------------------------------------------------------------------
>> td=0:2*pi/100:2*pi;
>> ud=sin(td);
>> Fvz=100e3;
>> plot(ud);
>> plot(ud,'*');
>> plot(ud,'.');
>> stem(ud,'.');
>> UD=fft(ud);
>> UD'; // bez stredniku pro vypsani, apostrof otaci z radku na sloupec
>> Mod=abs(UD);
>> Pha=angle(UD);
>> subplot(211);
>> stem(Mod,'.');
>> subplot(212);
>> stem(Pha,'.');


>> td1=0:2*pi/100:2*pi;
>> x1=sin(td1);
>> td2=0:2*pi/50:2*pi;
>> x2=sin(td2);
>> x2=[x2 x2(2:51)];

>> x=x1+x2;
>> stem(x,'.');
>> X=fft(x);
>> N=length(x);
>> Mod=2/N*abs(X);
>> tp=1e-3;
>> f=(0:N-1)/tp;

>> stem(f(1:(N-1)/2),Mod(1:(N-1)/2),'.')
>> 
>> Fa=50;
>> Fvz=400;
>> N=400;
>> k=0:N-1;
>> Tvz=1/Fvz;
>> s1=sin(2*pi*Fa*k*Tvz);
>> S1=fft(s1);
>> Mod1=2/N*abs(S1);
>> stem(k,Mod1,'.')


>> Fa=49.5;
>> Fvz=400;
>> N=400;
>> k=0:N-1;
>> Tvz=1/Fvz;
>> s2=sin(2*pi*Fa*k*Tvz);
>> S2=fft(s2);
>> Mod2=2/N*abs(S2);
>> stem(k,Mod2,'.')

>> s2hamm=s2*hamming(N);
>> s2hamm=s2.*hamming(N)';
>> S2hamm=fft(s2hamm);
>> Mod2hamm=2/N*abs(S2hamm);
>> stem(Mod2hamm,'.');



>> uiopen('d:\sig_fft_test.wav',1)
>> func=data;
>> stem (data);
>> funcDFT=fft(func);
>> stem(funcDFT);
>> sound(data,fs)
>> stem(funcDFT);
>> 
>> ModNoise=abs(funcDFT);
>> stem(ModNoise,'.');




